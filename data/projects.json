[
  {
    "id": 1,
    "name":"Minesweeper",
    "tagline": "The classic game, but in AngularJS",
    "short_description": "Relive your days of whittling away time in an office cubicle playing classic Minesweeper with this recreation. Win by unveiling all tiles which do not conceal mines, or flagging all the tiles which do.",
    "long_description": "This program will recreate the classic game of minesweeper. As a user, you can click tiles to reveal either a bomb or a clue to the number of bombs in the tiles around it. The goal is to clear the entire board without flipping over a tile with a bomb. This ends the game. The program uses an Angular Factory to create the board and its various properties such as tiles, bombs, difficulty, and size. A controller handles the playing logic and includes one of my proudest accomplishments. A recursive function that reveals tiles and calculates appropriate clues.",
    "image": "minesweeper.png",
    "featured": true,
    "is_game": true,
    "github_url": "https://github.com/abdcon02/April23_Minesweeper_AngularJS",
    "project_url": "minesweeper/index.html"
  },
  {
    "id": 2,
    "name":"Squid Chase",
    "tagline": "Get that Squid!",
    "short_description": "Squid Chase is a challenging game built using the p5.js library. p5.js follows the goals of Java&#39;s processing library which attempts to make coding accessible to artists and designers. Squid Chase mainly makes use of objects spatial awareness on the page.",
    "long_description": "This game challenges the user to chase an accelerating squid around the screen, accruing points for keeping the mouse in the target. It was built using the p5.js library. p5.js follows the goals of Java&#39;s processing library which attempts to make coding accessible to artists and designers. By adding vector properties to the squid object, and remembering some geometry from math class, it was possible to create a bouncing target. After adding some more logic for mouse events, and a score tracker, a nice little time wasting game was created.",
    "image": "squid.png",
    "featured": false,
    "is_game": true,
    "github_url": "https://github.com/abdcon02/April29_SquareGame_p5",
    "project_url": "squidchase/index.html"
  },
  {
    "id": 3,
    "name":"Pizza Order",
    "tagline":"Just cheese please",
    "short_description": "This is a simple JQuery project that was created using BDD best practices. JavaScript testing libraries Mocha and Chai were used to create specs, starting with the simplest case first!",
    "long_description": "Following BDD best practices can sometimes be difficult, especially when a function's logic is not going to be that difficult. Mocha and Chai are two common JavaScript tools that are used together to create specs and drive BDD. They were both used in this simple JQuery web application to ensure each customer is not being overcharged on their pizza order.",
    "image": "pizza.png",
    "featured": false,
    "is_game": false,
    "github_url": "https://github.com/lvampa/Assessment_april7_PizzaDelivery",
    "project_url": "pizza/pizza.html"
  },
  {
    "id": 4,
    "name":"Triangle Checker",
    "tagline":"Hey! Who you calling obtuse?",
    "short_description": "With this throwback to Geometry class days, enter 3 out of the 5 sides of a triangle and this program will tell you the triangle type. As an added bonus, it will even try to draw it for you.",
    "long_description": "With this throwback to Geometry class days, enter 3 out of the 5 sides of a triangle and this program will tell you the triangle type. As an added bonus, it will even try to draw it for you. The drawing is done using a css polygon shape and the logic is some simple JavaScript. Mocha and Chai were used to write specs and build out the logic in proper BDD fashion.",
    "image": "triangle.png",
    "featured": false,
    "is_game": false,
    "github_url": "https://github.com/lvampa/Assessment_april7_PizzaDelivery",
    "project_url": "triangle/triangle.html"
  },
  {
    "id": 5,
    "name":"Repeat Word Counter",
    "tagline":"Hello hello hello world",
    "short_description": "This Count Repeats app with take a string of words as an input as well as a single word to search for. It will then output the number of times that word appears in the string. It was completed using PHP, Silex version 1.0, Twig version 1.1, and tested in PHPUnit 4.5.",
    "long_description": "This Count Repeats app with take a string of words as an input as well as a single word to search for. It will then output the number of times that word appears in the string. It was completed using PHP, Silex version 1.0, Twig version 1.1, and tested in PHPUnit 4.5. The project was speced out in plain english before test were written.",
    "image": "repeat.png",
    "featured": false,
    "is_game": false,
    "github_url": "https://github.com/lvampa/Assessment_march13_CountRepeats",
    "project_url": "repeat/web/index.php"
  }
]
